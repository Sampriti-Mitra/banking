package main

import (
	"fmt"
	"log"
	"os"

	"github.com/Sampriti-Mitra/transactions/docs"
	"github.com/Sampriti-Mitra/transactions/internals/transactions/controllers"
	"github.com/Sampriti-Mitra/transactions/internals/transactions/repo"
	"github.com/Sampriti-Mitra/transactions/internals/transactions/services"
	"github.com/gin-gonic/gin"
	"gorm.io/driver/mysql"
	"gorm.io/gorm"

	// swagger
	swaggerFiles "github.com/swaggo/files"     // swagger embed files
	ginSwagger "github.com/swaggo/gin-swagger" // gin-swagger middleware

	_ "github.com/Sampriti-Mitra/transactions/docs" // docs is generated by Swag CLI, you have to import it.
)

//	@title			Swagger Banking API
//	@version		1.0
//	@description	This is a transaction/banking server.

//	@license.name	Apache 2.0
//	@license.url	http://www.apache.org/licenses/LICENSE-2.0.html

//	@host		localhost:8080
//	@BasePath	/api/v1

func main() {

	dsn := fmt.Sprintf("%s:%s@tcp(%s:%s)/%s",
		os.Getenv("MYSQL_USER"),
		os.Getenv("MYSQL_PASSWORD"),
		os.Getenv("MYSQL_HOST"),
		os.Getenv("MYSQL_PORT"),
		os.Getenv("MYSQL_DBNAME"))

	db, err := gorm.Open(mysql.Open(dsn), &gorm.Config{})
	if err != nil {
		log.Fatal(err)
	}

	txnRepo, err := repo.NewTransactionRepo(db)
	if err != nil {
		log.Fatal(err)
	}
	txnSvc := services.NewTransactionService(txnRepo)
	txnCntrl := controllers.NewTransactionController(txnSvc)

	r := gin.New()
	base := r.Group("api")
	v1 := base.Group("/v1")

	v1.POST("/accounts", txnCntrl.CreateAccount)
	v1.GET("/accounts/{id}", txnCntrl.GetAccount)
	v1.POST("/transactions", txnCntrl.CreateTransaction)

	docs.SwaggerInfo.BasePath = "/api/v1"
	v1.GET("/swagger/*any", ginSwagger.WrapHandler(
		swaggerFiles.Handler,
		ginSwagger.URL("http://localhost:8080/api/v1/swagger/doc.json"),
		ginSwagger.DefaultModelsExpandDepth(-1)))

	r.Run(":8080")

}
